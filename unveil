#!/bin/sh -e

dir=${SECRETS:="$HOME/secrets"}

programname="unveil"

uflag=0
pflag=0
oflag=0
eflag=0
secret=""

creset='\033[0m'
cdir='\033[1;36m'
ctitle='\033[1m'

# Decrypt PGP encrypted file $dir/$1 and prints the plain text to stdout.
decrypt() {
	if [ ! -f "$dir/$1" ]; then
		stderr "Secret $1 does not exist."
		exit 1
	fi

	if ! sq decrypt -q "$dir/$1" 2> /dev/null; then
		stderr "Failed to decrypt $1."
		exit 1
	fi
}

# List directories in $dir which contain at least one of username.enc,
# password.enc or otp.enc, along with the flags of what .enc file is available
# (u, p, o).
list() {
	for f in "$dir"/*; do
		b=$(basename "$f")
		hasu=0
		hasp=0
		haso=0
		hase=0

		if [ ! -d "$f" ]; then
			continue
		fi

		flags="("

		if [ -f "$f/username.enc" ]; then
			flags="${flags}u"
			hasu=1
		fi

		if [ -f "$f/password.enc" ]; then
			flags="${flags}p"
			hasp=1
		fi

		if [ -f "$f/otp.enc" ]; then
			flags="${flags}o"
			haso=1
		fi

		if [ -f "$f/extra.enc" ]; then
			flags="${flags}e"
			hase=1
		fi

		flags="${flags})"

		if [ $hasu -eq 0 ] \
		&& [ $hasp -eq 0 ] \
		&& [ $haso -eq 0 ] \
		&& [ $hase -eq 0 ]; then
			continue
		fi

		printf "- ${cdir}$b${creset} $flags\n"
	done
}

# Prints $1 to stderr.
stderr() {
	echo "$1" >&2
}

# Dies printing usage.
usage() {
	stderr "Usage: $programname [-u secret | -p secret | -o secret | -e secret]"
	exit 1
}

while getopts "u:p:o:e:" o; do
	case $o in
	u)
		uflag=1
		secret="$OPTARG"
		;;
	p)
		pflag=1
		secret="$OPTARG"
		;;
	o)
		oflag=1
		secret="$OPTARG"
		;;
	e)
		eflag=1
		secret="$OPTARG"
		;;
	*)
		usage
	esac
done

shift $((OPTIND - 1))

# Only allow one of -u, -p and -o.
if [ $(($uflag + $pflag + $oflag + $eflag)) -gt 1 ]; then
	usage
fi

# Disallow arguments.
if [ $# -ne 0 ]; then
	usage
fi

if   [ $uflag -eq 1 ]; then
	decrypt "$secret/username.enc"
elif [ $pflag -eq 1 ]; then
	decrypt "$secret/password.enc"
elif [ $oflag -eq 1 ]; then
	decrypt "$secret/otp.enc"
elif [ $eflag -eq 1 ]; then
	decrypt "$secret/extra.enc"
else
	list
fi
