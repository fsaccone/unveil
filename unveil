#!/bin/sh -e

dir=${SECRETS:="$HOME/secrets"}

programname="unveil"

gflag=0
garg=""
lflag=0

creset='\033[0m'
cdir='\033[1;36m'
ctitle='\033[1m'

# Decrypt PGP encrypted file $dir/$1.enc and prints the plain text to stdout.
# Exits with return code 1 if the file does not exist or with 2 if decryption
# fails.
decrypt() {
	if [ ! -f "$dir/$1.enc" ]; then
		stderr "Secret $1 does not exist."
		exit 1
	fi

	if ! sq decrypt -q "$dir/$1.enc" 2> /dev/null; then
		stderr "Failed to decrypt $1."
		exit 1
	fi
}

# List files ending in ".enc" in $1 in a formatted format using $2 as the
# prefix of each printed line, recursing directories and appending to $2 for
# each cycle to create an indentation effect. The ".enc" prefix is removed from
# file names.
list() {
	for f in "$1"/*; do
		b=$(basename "$f")

		if [ -d "$f" ]; then
			printf    "$2|- ${cdir}$b${creset}\n"
			list "$f" "$2|  "
		elif [ -f "$f" ]; then
			case "$b" in
			*.enc)
				printf    "$2|- ${b%.enc}\n"
				;;
			esac
		fi
	done
}

# Prints $1 to stderr.
stderr() {
	echo "$1" >&2
}

# Dies printing usage.
usage() {
	stderr "Usage: $programname -g secret"
	stderr "       $programname -l"
	exit 1
}

while getopts "g:l" o; do
	case $o in
	g)
		gflag=1
		garg="$OPTARG"
		;;
	l)
		lflag=1
		;;
	*)
		usage
		;;
	esac
done

shift $((OPTIND - 1))

if [ $gflag -eq 1 ] && [ $lflag -eq 1 ]; then
	usage
fi

if [ $gflag -eq 1 ]; then
	decrypt "$garg"

	exit 0
fi

if [ $lflag -eq 1 ]; then
	printf "${ctitle}Secrets${creset}\n"
	list "$dir" ""

	exit 0
fi

usage
